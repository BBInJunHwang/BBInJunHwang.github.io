<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="http://localhost:4000/tag/businesslogic/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2022-08-29T11:07:08+09:00</updated>
  <id>http://localhost:4000/tag/businesslogic/feed.xml</id>

  
  
  

  
    <title type="html">junny blogs | </title>
  

  
    <subtitle>백엔드</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">로그인 구현 연동</title>
      <link href="http://localhost:4000/businessLogic-06_basic" rel="alternate" type="text/html" title="로그인 구현 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-06_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-06_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[로그인] 인증 프로세스&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;1. 사내직원 여부&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 사내직원 : LDAP 인증&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 일반사용자 : DB 인증&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic06/ch06_authenticationProvider01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;authenticationProvider 에서 사내직원 / 일반 사용자 분기 실시&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic06/ch06_ldap01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;LDAP 프로세스로 DB인증을 위한 패스워드 해시화와 달리 window LDAP 서버로 인증하기 위해서는&lt;br /&gt;
                    평문 pw가 필요하기 때문에 클라이언트와 비대칭키를 이용한 RSA 암호화 값을 복호화 해준다.&lt;/span&gt;
            &lt;/div&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic06/ch06_ldap02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;LDAP 인증을 위한 id,pw 입력 및 LDAP 쿼리를 수행 후 사용자 여부를 파악한다.&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic06/ch06_createToken01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;로그인이 정상 수행되었을때 토큰을 발급한다.&lt;br /&gt;
                    토큰은 발급 후 사용자 테이블 DB에 저장되며, 차후 토큰 탈취 등 상황에서 가장 마지막에 발급된 토큰만&lt;br /&gt;
                    유효하게 사용가능하도록 upsert 된다&lt;br /&gt;
              &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [로그인] 인증 프로세스 프로세스 고려사항 1. 사내직원 여부 -&amp;gt; 사내직원 : LDAP 인증 -&amp;gt; 일반사용자 : DB 인증 authenticationProvider 에서 사내직원 / 일반 사용자 분기 실시 LDAP 프로세스로 DB인증을 위한 패스워드 해시화와 달리 window LDAP 서버로 인증하기 위해서는 평문 pw가 필요하기 때문에 클라이언트와 비대칭키를 이용한 RSA 암호화 값을 복호화 해준다. LDAP 인증을 위한 id,pw 입력 및 LDAP 쿼리를 수행 후 사용자 여부를 파악한다. 로그인이 정상 수행되었을때 토큰을 발급한다. 토큰은 발급 후 사용자 테이블 DB에 저장되며, 차후 토큰 탈취 등 상황에서 가장 마지막에 발급된 토큰만 유효하게 사용가능하도록 upsert 된다</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">로그인 구현 연동</title>
      <link href="http://localhost:4000/businessLogic-05_basic" rel="alternate" type="text/html" title="로그인 구현 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-05_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-05_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[로그인] 커스텀 필터 적용&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;request 여부&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 모든 요청은 json&lt;/p&gt;
      &lt;p&gt;-&amp;gt; cors 방지&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;로그인 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic05/ch05_login01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;
              &lt;/span&gt;
            &lt;/div&gt;
            &lt;span&gt;커스텀 필터&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic05/ch05_requestFilter01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic05/ch05_requestFilter02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;1. requestFilter &lt;br /&gt;
                    -&amp;gt; 각종 필터에서 request를 먼저 stream으로 읽었을때 필터 통과 후 &lt;br /&gt;
                       컨트롤러에서 request 처리 시 null 발생
                    -&amp;gt; 톰캣에서 한번 읽은 stream은 사용 불가능 -&amp;gt; Wrapper 객체를 만들어서 읽은 후 다른곳에서 사용시 해당 객체를 반환
              &lt;/span&gt;
            &lt;/div&gt; 
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic05/ch05_jsonFilter01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;2. JSON 유효성 필터 &lt;br /&gt;
                    -&amp;gt; request가 정상적인 json 구조 요청인지 확인한다.
                    -&amp;gt; Gson lib 이용해서 정상적으로 json 구조 생성이 되면 통과
              &lt;/span&gt;
            &lt;/div&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic05/ch05_corsFilter01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;3. CORS 필터 &lt;br /&gt;
                    -&amp;gt; 클라이언트 서버가 따로 존재하며, ajax 등 스크립트를 통해서 호출 시 cors 발생
                    -&amp;gt; cors 방지를 위한 필터 처리
              &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [로그인] 커스텀 필터 적용 프로세스 고려사항 request 여부 -&amp;gt; 모든 요청은 json -&amp;gt; cors 방지 로그인 구성도 커스텀 필터 1. requestFilter -&amp;gt; 각종 필터에서 request를 먼저 stream으로 읽었을때 필터 통과 후 컨트롤러에서 request 처리 시 null 발생 -&amp;gt; 톰캣에서 한번 읽은 stream은 사용 불가능 -&amp;gt; Wrapper 객체를 만들어서 읽은 후 다른곳에서 사용시 해당 객체를 반환 2. JSON 유효성 필터 -&amp;gt; request가 정상적인 json 구조 요청인지 확인한다. -&amp;gt; Gson lib 이용해서 정상적으로 json 구조 생성이 되면 통과 3. CORS 필터 -&amp;gt; 클라이언트 서버가 따로 존재하며, ajax 등 스크립트를 통해서 호출 시 cors 발생 -&amp;gt; cors 방지를 위한 필터 처리</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Toss Payment 연동</title>
      <link href="http://localhost:4000/businessLogic-04_basic" rel="alternate" type="text/html" title="Toss Payment 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-04_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-04_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[발주 프로세스] 환불 설계&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;1. 상품상태 확인&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 주문확정 / 배송중 분기&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 주문확정 : 물류 취소 후 결제 취소 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 배송중 : 결제만 취소&lt;/p&gt;
      &lt;p&gt;2. 환불타입&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 전체 환불 : 모든 상품 환불&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 부분환불 : 일부 상품 환불 &lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;환불 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic04/ch04_refund01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;상품상태 확인&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic04/ch04_refund02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 상품상태가 주문확정인지 배송중인지 확인한다.&lt;br /&gt;
                      2. 주문확정 시 물류취소를 선행한다.&lt;br /&gt;
                &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;환불타입 확인&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic04/ch04_refund03.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 전체환불 / 부분환불 확인한다.&lt;br /&gt;
                      2. 부분환불 
                      -&amp;gt; 결제 기록과 대조 후 부분환불 상품목록과 가격을 비교한다.&lt;br /&gt;
                      -&amp;gt; 이미 취소된 상품인지, 환불금액이 일치하는지, 환불 누적금액과 결제금액 비교&lt;br /&gt;
                      3. 전체환불
                      &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;환불 결과&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic04/ch04_refund04.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 토스 모듈을 이용한 환불 실시&lt;br /&gt;
                      2. DB처리
                &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [발주 프로세스] 환불 설계 프로세스 고려사항 1. 상품상태 확인 -&amp;gt; 주문확정 / 배송중 분기 -&amp;gt; 주문확정 : 물류 취소 후 결제 취소 -&amp;gt; 배송중 : 결제만 취소 2. 환불타입 -&amp;gt; 전체 환불 : 모든 상품 환불 -&amp;gt; 부분환불 : 일부 상품 환불 환불 구성도 상품상태 확인 1. 상품상태가 주문확정인지 배송중인지 확인한다. 2. 주문확정 시 물류취소를 선행한다. 환불타입 확인 1. 전체환불 / 부분환불 확인한다. 2. 부분환불 -&amp;gt; 결제 기록과 대조 후 부분환불 상품목록과 가격을 비교한다. -&amp;gt; 이미 취소된 상품인지, 환불금액이 일치하는지, 환불 누적금액과 결제금액 비교 3. 전체환불 환불 결과 1. 토스 모듈을 이용한 환불 실시 2. DB처리</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Toss Payment 연동</title>
      <link href="http://localhost:4000/businessLogic-03_basic" rel="alternate" type="text/html" title="Toss Payment 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-03_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-03_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[발주 프로세스] 로직 설계&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;1. 사용자 유효성 검증&lt;br /&gt;&lt;/p&gt;
      &lt;p&gt;-&amp;gt;  중지나 탈퇴 등 상태가 아닌 정상 사용자&lt;/p&gt;
      &lt;br /&gt;
      &lt;p&gt;2. 토스 페이먼츠 유효성 검증&lt;/p&gt;
      &lt;p&gt;-&amp;gt; ISP 카드 연동위한 파라미터 세팅&lt;/p&gt;
      &lt;p&gt;-&amp;gt; MD5 해쉬 이용한 거래 위변조 방지&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 토스에서 발급한 상점키 환경설정&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 정상일때 사용할 PAY_KEY 리디렉트&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 결제 lib 모듈 연동&lt;/p&gt;
      &lt;p&gt;-&amp;gt; DB 데이터 처리&lt;/p&gt;
      &lt;br /&gt;
      &lt;p&gt;3. SAP 연동&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 결제 전표 SAP 전송&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;발주 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic03/ch03_buy01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;유효성 검사&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic03/ch03_buy02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 사용자가 중지나, 탈퇴 등 비정상적인 상태인지 검증한다.&lt;br /&gt;
                      2. 결제 트랜잭션 테이블에 데이터 처리 시작&lt;br /&gt;
                      3. MD5 해쉬를 이용한 거래 위변조 체크를 한다&lt;br /&gt;
                      4. 위변조 체크를 응답받은 리디렉트 컨트롤러에서 PAY_KEY를 내려 받는다&lt;br /&gt;
                      5. 결제 트랜잭션 테이블에 PAY_KEY 업데이트&lt;br /&gt;
                      &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;결제&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic03/ch03_buy03.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. PAY_KEY 및 금액 등 결제에 필요한 파라미터 세팅&lt;br /&gt;
                      2. 토스 결제 모듈 호출 &lt;br /&gt;
                      3. 결제 응답값 DB처리 -&amp;gt; 개인정보 등 AES 암호화 처리&lt;br /&gt;
                      4. SAP 전표 생성&lt;br /&gt;
                      5. EAI 와 연동한 경로에 전표 DUMP&lt;br /&gt;
                &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;발주&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic03/ch03_buy04.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 발주 유효성 검사&lt;br /&gt;
                      -&amp;gt; 장바구니 유효성 검사 (이미 발주된건인지 확인)&lt;br /&gt;
                      -&amp;gt; 상품 유효성 검사(상품 판매 중단여부, 재고 체크, 이벤트/세트상품 대상인지 등)&lt;br /&gt;
                      -&amp;gt; 쿠폰 유효성 검사(쿠폰 만료여부, 쿠폰삭제여부, 기사용쿠폰 여부)&lt;br /&gt;
                      -&amp;gt; 결제 번호 유효성 검사&lt;br /&gt;
                      2. 발주 처리&lt;br /&gt;
                      -&amp;gt; DB 처리 (장바구니 발주 완료 처리, 결제-장바구니-SAP-쿠폰 등 매핑)
                      3. SAP 처리&lt;br /&gt;
                      -&amp;gt; 발주된 상품정보 전송&lt;br /&gt;
                  &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [발주 프로세스] 로직 설계 프로세스 고려사항 1. 사용자 유효성 검증 -&amp;gt; 중지나 탈퇴 등 상태가 아닌 정상 사용자 2. 토스 페이먼츠 유효성 검증 -&amp;gt; ISP 카드 연동위한 파라미터 세팅 -&amp;gt; MD5 해쉬 이용한 거래 위변조 방지 -&amp;gt; 토스에서 발급한 상점키 환경설정 -&amp;gt; 정상일때 사용할 PAY_KEY 리디렉트 -&amp;gt; 결제 lib 모듈 연동 -&amp;gt; DB 데이터 처리 3. SAP 연동 -&amp;gt; 결제 전표 SAP 전송 발주 구성도 유효성 검사 1. 사용자가 중지나, 탈퇴 등 비정상적인 상태인지 검증한다. 2. 결제 트랜잭션 테이블에 데이터 처리 시작 3. MD5 해쉬를 이용한 거래 위변조 체크를 한다 4. 위변조 체크를 응답받은 리디렉트 컨트롤러에서 PAY_KEY를 내려 받는다 5. 결제 트랜잭션 테이블에 PAY_KEY 업데이트 결제 1. PAY_KEY 및 금액 등 결제에 필요한 파라미터 세팅 2. 토스 결제 모듈 호출 3. 결제 응답값 DB처리 -&amp;gt; 개인정보 등 AES 암호화 처리 4. SAP 전표 생성 5. EAI 와 연동한 경로에 전표 DUMP 발주 1. 발주 유효성 검사 -&amp;gt; 장바구니 유효성 검사 (이미 발주된건인지 확인) -&amp;gt; 상품 유효성 검사(상품 판매 중단여부, 재고 체크, 이벤트/세트상품 대상인지 등) -&amp;gt; 쿠폰 유효성 검사(쿠폰 만료여부, 쿠폰삭제여부, 기사용쿠폰 여부) -&amp;gt; 결제 번호 유효성 검사 2. 발주 처리 -&amp;gt; DB 처리 (장바구니 발주 완료 처리, 결제-장바구니-SAP-쿠폰 등 매핑) 3. SAP 처리 -&amp;gt; 발주된 상품정보 전송</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Toss Payment 연동</title>
      <link href="http://localhost:4000/businessLogic-02_basic" rel="alternate" type="text/html" title="Toss Payment 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-02_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-02_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[발주 프로세스] DB 설계&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;1. 상품구조&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 일반상품 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 사은품 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 세트상품 (일반상품 + 사은품) &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 이벤트 상품(일반상품의 할인가격) &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 세트상품과 이벤트 상품은 특정 사용자 지정 &lt;/p&gt;
      &lt;br /&gt;
      &lt;p&gt;2. 프로모션 구조&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 프로모션 대상 상품지정 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 프로모션 제공 상품지정 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 프로모션은 특정 사용자 지정 &lt;/p&gt;
      &lt;p&gt;-&amp;gt; 프로모션은 개수 혹은 가격합산이 충족할때 적용&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 프로모션은 단건/누적으로 적용&lt;/p&gt;
      &lt;br /&gt;
      &lt;p&gt;3. 결제 구조&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 토스 페이먼츠 간편결제를 사용&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 결제 후 SAP으로 전표 생성 후 전달&lt;/p&gt;
      &lt;p&gt;-&amp;gt; 전체 / 부분환불이 존재&lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;DB 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic02/ch02_db_ERD01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;상품 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic02/ch02_product01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 브랜드 하위에 상품들이 존재하며, 브랜드 코드/상품코드가 PK로 존재&lt;br /&gt;
                      2. 일반상품, 사은품은 단독으로 마스터 테이블이 존재&lt;br /&gt;
                      3-1. 세트상품 key 값을 이용해 안에 포함된 일반상품/사은품을 매핑&lt;br /&gt;
                      3-2. 세트상품 key 값을 이용해 타켓 대상 ID를 매핑&lt;br /&gt;
                      4-1. 이벤트 상품key 값을 이용해 할인정보를 매핑&lt;br /&gt;
                      4-2. 이벤트 상품 key 값을 이용해 타켓 대상 ID를 매핑&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;프로모션 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic02/ch02_promotion01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;  
                &lt;span&gt;1. 프로모션 key 값으로 타켓 상품을 매핑&lt;br /&gt;
                      2. 프로모션 key 값으로 증정 상품을 매핑&lt;br /&gt;
                      3. 프로모션 key 값으로 타켓 대상 ID를 매핑&lt;br /&gt;
                      4. 프로모션 key 값으로 적용 히스토리를 매핑&lt;br /&gt;
                &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
          &lt;span&gt;발주 구성도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic02/ch02_buy01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
                &lt;span&gt;1. 결제 트랜잭션, 결제성공/결제환불 이중으로 처리&lt;br /&gt;
                      2. 발주이력은 장바구니,결제이력,쿠폰이력,SAP처리 등 key값으로 매핑&lt;br /&gt;
                &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [발주 프로세스] DB 설계 프로세스 고려사항 1. 상품구조 -&amp;gt; 일반상품 -&amp;gt; 사은품 -&amp;gt; 세트상품 (일반상품 + 사은품) -&amp;gt; 이벤트 상품(일반상품의 할인가격) -&amp;gt; 세트상품과 이벤트 상품은 특정 사용자 지정 2. 프로모션 구조 -&amp;gt; 프로모션 대상 상품지정 -&amp;gt; 프로모션 제공 상품지정 -&amp;gt; 프로모션은 특정 사용자 지정 -&amp;gt; 프로모션은 개수 혹은 가격합산이 충족할때 적용 -&amp;gt; 프로모션은 단건/누적으로 적용 3. 결제 구조 -&amp;gt; 토스 페이먼츠 간편결제를 사용 -&amp;gt; 결제 후 SAP으로 전표 생성 후 전달 -&amp;gt; 전체 / 부분환불이 존재 DB 구성도 상품 구성도 1. 브랜드 하위에 상품들이 존재하며, 브랜드 코드/상품코드가 PK로 존재 2. 일반상품, 사은품은 단독으로 마스터 테이블이 존재 3-1. 세트상품 key 값을 이용해 안에 포함된 일반상품/사은품을 매핑 3-2. 세트상품 key 값을 이용해 타켓 대상 ID를 매핑 4-1. 이벤트 상품key 값을 이용해 할인정보를 매핑 4-2. 이벤트 상품 key 값을 이용해 타켓 대상 ID를 매핑 프로모션 구성도 1. 프로모션 key 값으로 타켓 상품을 매핑 2. 프로모션 key 값으로 증정 상품을 매핑 3. 프로모션 key 값으로 타켓 대상 ID를 매핑 4. 프로모션 key 값으로 적용 히스토리를 매핑 발주 구성도 1. 결제 트랜잭션, 결제성공/결제환불 이중으로 처리 2. 발주이력은 장바구니,결제이력,쿠폰이력,SAP처리 등 key값으로 매핑</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">AWS MIG 구현</title>
      <link href="http://localhost:4000/businessLogic-01_basic" rel="alternate" type="text/html" title="AWS MIG 구현" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-01_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-01_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- &lt;div&gt;
&lt;br&gt;
&lt;h2&gt;[스프링] on premise -&gt; CDN migration&lt;/h2&gt;&lt;br&gt;

&lt;p align = &quot;justify&quot;&gt;
&lt;font size=3&gt;
기존 온 프레미스 환경내 구축되어있던 서비스 AWS 마이그레이션 실시&lt;br&gt;

&lt;h1&gt;변경사항&lt;/h1&gt; &lt;br&gt;
파일 업로드&lt;br&gt;
AS-IS &lt;br&gt;
기존 웹 서버 + window 서버용 CDN dll 파일 통한 파일 업로드&lt;br&gt; 
TO-BE&lt;br&gt; 
FTP 업로드 + S3 업로드 &lt;br&gt;

+ 고려사항&lt;br&gt;
1. 기존 CDN dll 파일 제거 및 window 서버용 로직 제거 &lt;br&gt;
2. 영상 업로드, PDF 업로드 분리 및 PDF -&gt; 이미지 변환&lt;br&gt;


영상인경우 &lt;br&gt;
웹 서버 업로드 대체 s3 putObject 메서드 구현&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_s3_upload_class01.PNG&apos; alt=&apos;absolute&apos;&gt;


CDN 직접 영상 파일 업로드를 위한 FTP 업로드 로직 구현 
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_ftp_upload_class01.PNG&apos; alt=&apos;absolute&apos;&gt;


PDF 경우 &lt;br&gt;
웹 서버 업로드 대체 s3 pubOjbect 이미지 메서드 구현&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_s3_upload_class02.PNG&apos; alt=&apos;absolute&apos;&gt;

PDF -&gt; IMG 변경 위한 메서드 구현&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_class01.PNG&apos; alt=&apos;absolute&apos;&gt;

pdfbox.lib 에서 제공하는 PDFImageWriter.class 내 writeImage 이미지는 &lt;br&gt;
단순히 IO를 통해 읽은 이미지를 서버내 특정경로에 저장만 시키기 때문에 &lt;br&gt;
읽은 후  s3 업로드를 위해서는 재정의가 필요하다&lt;br&gt;
IO 작업 후 s3 업로드 로직 추가&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_class02.PNG&apos; alt=&apos;absolute&apos;&gt;

정상적으로 PDF 파일 장수만큼 이미지 파일로 변경완료&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_result01.PNG&apos; alt=&apos;absolute&apos;&gt;

최종적으로 사용자에게 보여주기 위한 pre-signedUrl 생성&lt;br&gt;
&lt;img style=&quot;margin-left:0; margin-bottom: 25px;border: 2px outset gray; border-radius:10px;&quot; data-action=&quot;zoom&quot; src=&apos;/assets/images/businessLogic/businessLogic01/ch01_signedUrl_class01.PNG&apos; alt=&apos;absolute&apos;&gt;

&lt;/font&gt;
&lt;/p&gt;
&lt;/div&gt; --&gt;

&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[스프링] on premise -&amp;gt; CDN migration&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;온 프레미스 환경내 구축되어있던 서비스 AWS 마이그레이션 실시&lt;br /&gt;&lt;/h3&gt;
      &lt;span&gt;변경사항&lt;br /&gt;
            1. java6 -&amp;gt;8, 스프링 3 -&amp;gt; 4.X or 5.X 전환 필요&lt;br /&gt;
            2. 오라클 11 -&amp;gt; 19 전환 필요&lt;br /&gt;
            3. NEXUS 연동 불가로 인한 new Maven parent 필요&lt;br /&gt;
            4. DB link 불가능으로 인한 EAI 전환 필요&lt;br /&gt;
            5. 파일 업로드&lt;br /&gt;
               AS-IS : 웹 서버 + window 서버용 CDN dll 파일 통한 파일 업로드&lt;br /&gt;
               TO-BE : FTP 업로드 + S3 업로드 &lt;br /&gt;
            6. SVN -&amp;gt; Git Lab 변경&lt;br /&gt;
            7. CI/CD 구축&lt;br /&gt;
            &lt;br /&gt;
            + 고려사항&lt;br /&gt;
            1. java 및 spring 변경에 따른 검토필요
            2. 오라클19에서 지원하지않는 comcat -&amp;gt; listagg 등 문법 변경&lt;br /&gt;
            3. 기존 Nexus 대체할 외부 lib 연동 및 parent 구성&lt;br /&gt;
            4. EAI 연동할 수신 테이블 설계 및 데이터 범위 지정&lt;br /&gt;
            5. 파일업로드 시 기존 CDN dll 파일 제거 및 window 서버용 로직 제거&lt;br /&gt;
            6. 영상 업로드, PDF 업로드 분리 및 PDF -&amp;gt; 이미지 변환실시&lt;br /&gt;
            7. Git Lab 소스 push 및 브랜치 관리&lt;br /&gt;
            8. 자동배포를 위한 파이프라인 구성&lt;br /&gt;
            &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;!-- &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt; --&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;spring 버전 변경&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_spring_versionup01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;스프링 버전 변경&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;쿼리 변경&lt;/span&gt;
            &lt;div&gt;
              &lt;span&gt;LISTAGG 쿼리 및 literal does not match format string ora-01861 OS의 LANG 설정이 달라서 문자열을 묵시적으로 날짜로 변환을 못해서 발생하는 에러&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;parent 신규 생성&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_maven_local_repo01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_maven_parent01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_maven_parent02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;parent 신규 생성 및 모듈 추가&lt;br /&gt; 외부 lib 사용할 로컬 repo 정의&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;EAI 연동&lt;/span&gt;
            &lt;div&gt;
              &lt;span&gt;기존 DB link 사용이 불가능하기 떄문에, EAI receive 테이블 생성&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;첨부파일 업로드 변경&lt;/span&gt;
            &lt;span&gt;영상인경우&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_s3_upload_class01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;웹 서버 업로드 대체 s3 putObject 메서드 구현&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_ftp_upload_class01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;CDN 직접 영상 파일 업로드를 위한 FTP 업로드 로직 구현 &lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;PDF 경우&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_s3_upload_class02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;웹 서버 업로드 대체 s3 pubOjbect 이미지 메서드 구현&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_class01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;PDF -&amp;gt; IMG 변경 위한 메서드 구현&lt;/span&gt;
            &lt;/div&gt;
          &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_class02.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;pdfbox.lib 에서 제공하는 PDFImageWriter.class 내 writeImage 이미지는 &lt;br /&gt;
                    단순히 IO를 통해 읽은 이미지를 서버내 특정경로에 저장만 시키기 때문에 &lt;br /&gt;
                    읽은 후  s3 업로드를 위해서는 재정의가 필요하다&lt;br /&gt;
                    IO 작업 후 s3 업로드 로직 추가&lt;/span&gt;
            &lt;/div&gt;
          &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_pdf_convert_result01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;정상적으로 PDF 파일 장수만큼 이미지 파일로 변경완료&lt;/span&gt;
            &lt;/div&gt;
          &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_signedUrl_class01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;최종적으로 사용자에게 보여주기 위한 pre-signedUrl 생성&lt;/span&gt;
            &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;Git Lab 관리&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_gitlab01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;svn -&amp;gt; git lab 업로드 및 형상관리 실시&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;CICD 구축&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_aws_cicd_git01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_aws_cicd_env_variable01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_aws_cicd_build01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic01/ch01_aws_cicd_pipeline01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;기존 DB link 사용이 불가능하기 떄문에, EAI receive 테이블 생성&lt;br /&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) &amp;lt;!– &amp;lt;div&amp;gt; [스프링] on premise -&amp;gt; CDN migration</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">로그인 구현 연동</title>
      <link href="http://localhost:4000/businessLogic-07_basic" rel="alternate" type="text/html" title="로그인 구현 연동" />
      <published>2022-06-12T03:00:00+09:00</published>
      <updated>2022-06-12T03:00:00+09:00</updated>
      <id>http://localhost:4000/businessLogic-07_basic</id>
      <content type="html" xml:base="http://localhost:4000/businessLogic-07_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-01_basic&quot;&gt;BusinessLogic(1) AWS MIG&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-02_basic&quot;&gt;BusinessLogic(2) 발주 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-03_basic&quot;&gt;BusinessLogic(3) 발주 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-04_basic&quot;&gt;BusinessLogic(4) 발주 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-05_basic&quot;&gt;BusinessLogic(5) 로그인 프로세스 (1)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-06_basic&quot;&gt;BusinessLogic(6) 로그인 프로세스 (2)&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./businessLogic-07_basic&quot;&gt;BusinessLogic(7) 로그인 프로세스 (3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
    &lt;header&gt;
      &lt;h2 class=&quot;title&quot;&gt;[로그인] 토큰 요청&lt;/h2&gt;&lt;br /&gt;
    &lt;/header&gt;
    &lt;div&gt;
      &lt;h3 class=&quot;subTitle&quot;&gt;프로세스 고려사항&lt;/h3&gt;
      &lt;p&gt;1. 토큰 유효성 검사&lt;/p&gt;
      &lt;p&gt;-&amp;gt; JWT 토큰이 유효한지 &lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;listWrapper&quot;&gt;
      &lt;span style=&quot;font-size: 20px;&quot;&gt;&lt;/span&gt;
      &lt;ul class=&quot;imageList&quot;&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;span&gt;jwt 요청 순서도&lt;/span&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic07/ch07_authenticationProcess01.PNG&quot; alt=&quot;absolute&quot; /&gt;
          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;div class=&quot;area&quot;&gt;
            &lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/businessLogic/businessLogic07/ch07_tokenFilter01.PNG&quot; alt=&quot;absolute&quot; /&gt;
            &lt;div&gt;
              &lt;span&gt;header 토큰 확인, 토큰 검증, 만료 여부, refresh 로직 등등&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>BBInJunHwang</name>
        
        
      </author>

      

      
        <category term="businessLogic" />
      

      
        <summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. BusinessLogic(1) AWS MIG BusinessLogic(2) 발주 프로세스 (1) BusinessLogic(3) 발주 프로세스 (2) BusinessLogic(4) 발주 프로세스 (3) BusinessLogic(5) 로그인 프로세스 (1) BusinessLogic(6) 로그인 프로세스 (2) BusinessLogic(7) 로그인 프로세스 (3) [로그인] 토큰 요청 프로세스 고려사항 1. 토큰 유효성 검사 -&amp;gt; JWT 토큰이 유효한지 jwt 요청 순서도 header 토큰 확인, 토큰 검증, 만료 여부, refresh 로직 등등</summary>
      

      
      
    </entry>
  
</feed>
