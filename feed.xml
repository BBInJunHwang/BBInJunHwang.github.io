<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-28T14:10:35+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">junny blogs</title><subtitle>백엔드</subtitle><entry><title type="html">spring 시작하기(2)</title><link href="http://localhost:4000/spring-02_basic" rel="alternate" type="text/html" title="spring 시작하기(2)" /><published>2022-06-12T03:00:00+09:00</published><updated>2022-06-12T03:00:00+09:00</updated><id>http://localhost:4000/spring-02_basic</id><content type="html" xml:base="http://localhost:4000/spring-02_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-01_basic&quot;&gt;spring 시작하기(1) bean 생성&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-02_basic&quot;&gt;spring 시작하기(2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;spring2 입니다.&lt;/p&gt;</content><author><name>BBInJunHwang</name></author><category term="spring" /><summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. spring 시작하기(1) bean 생성 spring 시작하기(2)</summary></entry><entry><title type="html">spring 시작하기(1)</title><link href="http://localhost:4000/spring-01_basic" rel="alternate" type="text/html" title="spring 시작하기(1)" /><published>2022-06-12T03:00:00+09:00</published><updated>2022-06-12T03:00:00+09:00</updated><id>http://localhost:4000/spring-01_basic</id><content type="html" xml:base="http://localhost:4000/spring-01_basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;!-- _posts/spring/포스트날짜, md 확장자 제외한 파일명--&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-01_basic&quot;&gt;spring 시작하기(1) bean 생성&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-02_basic&quot;&gt;spring 시작하기(2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[스프링] Bean 개념 및 생성&lt;br /&gt;
스프링 빈이란?&lt;br /&gt;
-&amp;gt; 스프링 IOC 컨테이너가 관리하는 자바객체&lt;br /&gt;
-&amp;gt; New로 생성한 객체가 아님&lt;br /&gt;
-&amp;gt; ApplicationContext 로 얻을 수 있음&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;스프링 빈 xml 등록 방법&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;xml 등록&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;xml 설정에서 다음과 같이 설정한다.&lt;/p&gt;
&lt;bean id=&quot;bean id&quot; classs=&quot;클래스경로&quot;&gt;
	&amp;lt;property name=&quot;userId&quot; value=&quot;값&quot; / &amp;gt;
&lt;/bean&gt;

&lt;p&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/assets/images/spring/spring01/ch01_bean_xml.PNG&quot; alt=&quot;absolute&quot; /&gt;&lt;/p&gt;</content><author><name>BBInJunHwang</name></author><category term="spring" /><summary type="html">Spring 강좌는 여러 절로 구성되어 있습니다. spring 시작하기(1) bean 생성 spring 시작하기(2)</summary></entry><entry><title type="html">infra 시작하기</title><link href="http://localhost:4000/infra-01_basic" rel="alternate" type="text/html" title="infra 시작하기" /><published>2022-06-12T03:00:00+09:00</published><updated>2022-06-12T03:00:00+09:00</updated><id>http://localhost:4000/infra-01_basic</id><content type="html" xml:base="http://localhost:4000/infra-01_basic">&lt;p&gt;infra 시작해보자&lt;/p&gt;</content><author><name>BBInJunHwang</name></author><category term="infra" /><summary type="html">infra 시작해보자</summary></entry><entry><title type="html">Github 블로그 jekyll 이용하기</title><link href="http://localhost:4000/jekyll-01_basic" rel="alternate" type="text/html" title="Github 블로그 jekyll 이용하기" /><published>2022-06-12T03:00:00+09:00</published><updated>2022-06-12T03:00:00+09:00</updated><id>http://localhost:4000/jekyll-01_basic</id><content type="html" xml:base="http://localhost:4000/jekyll-01_basic">&lt;p&gt;Github 블로그 만들기 위한 jekyll 이용해보자&lt;/p&gt;</content><author><name>BBInJunHwang</name></author><category term="jekyll" /><summary type="html">Github 블로그 만들기 위한 jekyll 이용해보자</summary></entry><entry><title type="html">Organising your content with tags</title><link href="http://localhost:4000/using-tags" rel="alternate" type="text/html" title="Organising your content with tags" /><published>2017-07-27T17:00:00+09:00</published><updated>2017-07-27T17:00:00+09:00</updated><id>http://localhost:4000/using-tags</id><content type="html" xml:base="http://localhost:4000/using-tags">&lt;p&gt;Ghost has a single, powerful organisational taxonomy, called tags.&lt;/p&gt;
&lt;p&gt;It doesn&apos;t matter whether you want to call them categories, tags, boxes, or anything else. You can think of Ghost tags a lot like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.&lt;/p&gt;
&lt;h2 id=&quot;basictagging&quot;&gt;Basic tagging&lt;/h2&gt;
&lt;p&gt;When you write a post, you can assign tags to help differentiate between categories of content. For example, you might tag some posts with &lt;code&gt;News&lt;/code&gt; and other posts with &lt;code&gt;Cycling&lt;/code&gt;, which would create two distinct categories of content listed on &lt;code&gt;/tag/news/&lt;/code&gt; and &lt;code&gt;/tag/cycling/&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;If you tag a post with both &lt;code&gt;News&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;Cycling&lt;/code&gt; - then it appears in both sections.&lt;/p&gt;
&lt;p&gt;Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.&lt;/p&gt;
&lt;h2 id=&quot;theprimarytag&quot;&gt;The primary tag&lt;/h2&gt;
&lt;p&gt;Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. So you can add the most important tag which you want to show up in your theme, but also add a bunch of related tags which are less important.&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;News&lt;/strong&gt;, Cycling, Bart Stevens, Extreme Sports&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;In this example, &lt;strong&gt;News&lt;/strong&gt; is the primary tag which will be displayed by the theme, but the post will also still receive all the other tags, and show up in their respective archives.&lt;/p&gt;
&lt;h2 id=&quot;privatetags&quot;&gt;Private tags&lt;/h2&gt;
&lt;p&gt;Sometimes you may want to assign a post a specific tag, but you don&apos;t necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.&lt;/p&gt;
&lt;p&gt;For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;News&lt;/strong&gt;, Cycling, #video&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;Here, the theme would assign the post publicly displayed tags of &lt;code&gt;News&lt;/code&gt;, and &lt;code&gt;Cycling&lt;/code&gt; - but it would also keep a private record of the post being tagged with &lt;code&gt;#video&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In your theme, you could then look for private tags conditionally and give them special formatting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;nohighlight&quot;&gt;{{#post}}
    {{#has tag=&amp;quot;#video&amp;quot;}}
        ...markup for a nice big video post layout...
    {{else}}
        ...regular markup for a post...
    {{/has}}
{{/post}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can find documentation for theme development techniques like this and many more over on Ghost&apos;s extensive &lt;a href=&quot;https://themes.ghost.org/&quot;&gt;theme documentation&lt;/a&gt;.&lt;/p&gt;</content><author><name>ghost</name></author><category term="Getting started" /><summary type="html">Ghost has a single, powerful organisational taxonomy, called tags. It doesn&apos;t matter whether you want to call them categories, tags, boxes, or anything else. You can think of Ghost tags a lot like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content. Basic tagging When you write a post, you can assign tags to help differentiate between categories of content. For example, you might tag some posts with News and other posts with Cycling, which would create two distinct categories of content listed on /tag/news/ and /tag/cycling/, respectively. If you tag a post with both News and Cycling - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data. The primary tag Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. So you can add the most important tag which you want to show up in your theme, but also add a bunch of related tags which are less important. News, Cycling, Bart Stevens, Extreme Sports In this example, News is the primary tag which will be displayed by the theme, but the post will also still receive all the other tags, and show up in their respective archives. Private tags Sometimes you may want to assign a post a specific tag, but you don&apos;t necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling. For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do. News, Cycling, #video Here, the theme would assign the post publicly displayed tags of News, and Cycling - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting: {{#post}} {{#has tag=&amp;quot;#video&amp;quot;}} ...markup for a nice big video post layout... {{else}} ...regular markup for a post... {{/has}} {{/post}} You can find documentation for theme development techniques like this and many more over on Ghost&apos;s extensive theme documentation.</summary></entry></feed>